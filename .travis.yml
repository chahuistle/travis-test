# Build script for Travis CI
#
sudo: false
language: java
jdk: openjdk8

# speed up builds by caching maven local repository
cache:
  directories:
  - "$HOME/.m2/repository"

# as agreed in our SOP
branches:
  only:
  - master
  - development

# speed up builds by telling Travis that we don't need any special "installation"
install: true

# as agreed in our SOP, build everything (don't deploy, just try to 'mvn install' locally, which covers all phases)
script: mvn --activate-profiles !development-build,!release-build --settings .travis.settings.xml clean cobertura:cobertura install
# upload code coverage report, generate maven site (javadocs, documentation, static code analysis, etc.)
after_success:
- bash <(curl -s https://codecov.io/bash)
- mvn site

# unencrypt file with sensitive information only if needed
before_deploy: "source ./.travis.decrypt.sh /tmp/travis_rsa"

deploy:
  # as agreed in our SOP, builds on development branch will deploy to our maven repository after validating
  # the artifact has a proper SNAPSHOT version
  # artifact will be installed in our testing instance
- skip_cleanup: true
  provider: script
  script: mvn --activate-profiles development-build,!release-build --settings .travis.settings.xml deploy &&
          rsync --verbose -e "ssh -o StrictHostKeyChecking=no" -e "ssh -i /tmp/travis_rsa" target/*.war $TESTING_USERNAME@$TESTING_SERVER:~/liferay*/deploy
  on:
    branch: development
    condition: '"$TRAVIS_EVENT_TYPE" = "push"'
  # as agreed in our SOP, tagging a commit on the master branch will upload to our maven repository
  # after validating the artifact has a proper release version
  # artifact will be installed in our testing instance
- skip_cleanup: true
  provider: script
  script: mvn --activate-profiles !development-build,release-build --settings .travis.settings.xml deploy && 
          rsync --verbose -e "ssh -o StrictHostKeyChecking=no" -e "ssh -i /tmp/travis_rsa" target/*.war $TESTING_USERNAME@$TESTING_SERVER:~/liferay*/deploy
  on:
    branch: master
    tags: true

# always delete sensitive information
after_script: echo "Deleting all your secrets" && rm -f /tmp/travis_rsa

# change according to your needs, but we recommend to deactivate email notifications
# for now, we configured Travis to send a notification to the #travis-ci channel 
notifications:
  email:
    on_success: never
    on_failure: never
  slack:
    on_success: always
    on_failure: always
    rooms:
      - "$SLACK_TOKEN"